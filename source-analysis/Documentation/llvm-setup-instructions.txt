======================================================================================================
Instructions for building LLVM environment
======================================================================================================

*Note* The constant analysis was developed and tested on clang version 16 (latest at time of development)
       The backwards taint analysis was developed and tested on LLVM opt version 10 (limited by PDG tool) 


1. sudo apt-get install g++ cmake git automake re2c python3 python-all wget
   ln -s /usr/bin/python2.7 /usr/bin/python
   echo "deb http://us.archive.ubuntu.com/ubuntu/ bionic universe" | tee /etc/apt/sources.list.d/bionic.list
   apt install gcc-5

   wget https://cdn.kernel.org/pub/linux/kernel/v3.x/linux-3.19.tar.gz
   tar xf linux-3.19.tar.gz

2. mkdir LLVM
3. cd LLVM

Install LLVM:
4. git clone https://github.com/llvm/llvm-project --branch release/16.x
5. cd llvm-project/clang-tools-extra (if llvm 10.x follow patches below)
6. copy constant-analysis project folder here
7. edit CMakeLists.txt file and add the following line
	add_subdirectory(constant-analyzer)
8. cd ../
9. mkdir build
10. cd build
11. cmake ../llvm/ -DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra" -DLLVM_BUILD_TESTS=ON -Wno-dev -DLLVM_ENABLE_RTTI=ON -DLLVM_TARGETS_TO_BUILD=X86 -DCMAKE_BUILD_TYPE=Release
12. cmake --build . -j1		(Multiple threads requires significantly more memory (8 = +64Gb) )
13. sudo cmake --install .          (Optional if you want local tools installed, but adds ~40Gb of binaries and libraries)


======================================================================================================
Instructions to undo a "cmake --install"
======================================================================================================
The following commands can be used to undo a cmake --install using 
the install_manifest file generated by a cmake --install command. Run these in the
same directory you ran cmake --install.

cat install_manifest.txt | sudo xargs rm
cat install_manifest.txt | xargs -L1 dirname | sudo xargs rmdir -p


======================================================================================================
Building Mediator Taint Analysis Tool
======================================================================================================

The taint analysis can be built outside of LLVM source. I typically place it in the same directory as 
the llvm-project folder.

High level steps:
1. Build SVF
2. Build PDG tool
3. Build taint analysis

# Build SVF
cd Mediator-Analysis-Project/pdg/SVF/
mkdir build
cd build
cmake ../
make -j4

# Build PDG
cd ../..
mkdir build
cd build
cmake ../
make -j4

# Build Mediator-Analysis-Project
cd Mediator-Analysis-Project
mkdir build
cd build
cmake ../
make -j4

======================================================================================================
Options for Mediator-Analysis-Project
======================================================================================================

The mediator analysis project expects a configuration file that is passed to the tool on execution.
Here are the following configuration options that can be set. The format for all configuration options
is: <name of option>=<value>. In some cases multiple values are passed, in these cases they are seperated
by ':', such as <name of option>=<value1>:<value2>



# Specify name of application
application_name=name

# Specify name of module, if there are multiple types of <application>
module_name=name

# pp-trace file input
pp_file_path=/path/to/pp/file

# Clang AST file input
ast_file_path=/path/to/ast/file

# Specify any number of hook functions to be analyzed
hook_function=function_name

# The function that performs the check between user request and policy to determine a result
authorization_function=function_name

# Specify filters to identify subjects
subject_filter=<>

# Call graph settings
generate_call_strings=true/false
call_strings_context_sensitive=true/false (adds significant performance overhead if enabled)



======================================================================================================
Patches for LLVM version 10.x.x
======================================================================================================
llvm/utils/benchmark/src/benchmark_register.h
add "#include <limits>" to file 


======================================================================================================
Possible Problems
======================================================================================================
- If building pdg complains about LLVM_DIR, set LLVM_DIR environment variable to the llvm installation 
  directory. Point to llvm-x.x.x dir and not /build dir.



