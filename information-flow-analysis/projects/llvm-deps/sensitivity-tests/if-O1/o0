; ModuleID = 'main.c'
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.14.0"

; Function Attrs: nounwind ssp uwtable
define i32 @function(i32 %key, i32 %key2) #0 {
entry:
  %key.addr = alloca i32, align 4
  %key2.addr = alloca i32, align 4
  %u = alloca i32, align 4
  %m = alloca i32, align 4
  store i32 %key, i32* %key.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %key.addr, metadata !12, metadata !13), !dbg !14
  store i32 %key2, i32* %key2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %key2.addr, metadata !15, metadata !13), !dbg !16
  call void @llvm.dbg.declare(metadata i32* %u, metadata !17, metadata !13), !dbg !18
  call void @llvm.dbg.declare(metadata i32* %m, metadata !19, metadata !13), !dbg !20
  %call = call i64 @time(i64* null), !dbg !21
  %conv = trunc i64 %call to i32, !dbg !21
  call void @srand(i32 %conv), !dbg !22
  %0 = load i32, i32* %key.addr, align 4, !dbg !23
  store i32 %0, i32* %u, align 4, !dbg !24
  %1 = load i32, i32* %key2.addr, align 4, !dbg !25
  store i32 %1, i32* %m, align 4, !dbg !26
  store i32 1, i32* %u, align 4, !dbg !27
  br label %for.cond, !dbg !29

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %u, align 4, !dbg !30
  %3 = load i32, i32* %m, align 4, !dbg !32
  %cmp = icmp slt i32 %2, %3, !dbg !33
  br i1 %cmp, label %for.body, label %for.end, !dbg !34

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !34

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %u, align 4, !dbg !35
  %inc = add nsw i32 %4, 1, !dbg !35
  store i32 %inc, i32* %u, align 4, !dbg !35
  br label %for.cond, !dbg !36

for.end:                                          ; preds = %for.cond
  %5 = load i32, i32* %u, align 4, !dbg !37
  ret i32 %5, !dbg !38
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare void @srand(i32) #2

declare i64 @time(i64*) #2

attributes #0 = { nounwind ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!8, !9, !10}
!llvm.ident = !{!11}

!0 = !MDCompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (trunk) (git@git.psu.edu:dbz5017/LLVM-Deps.git dfce73fe0831457cbc5c1a8f7788dfcbd809ad99)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !2, subprograms: !3, globals: !2, imports: !2)
!1 = !MDFile(filename: "main.c", directory: "/Users/ernestdefoy/Code/Research-2019/LLVM-Deps/projects/llvm-deps/sensitivity-tests/if-O1")
!2 = !{}
!3 = !{!4}
!4 = !MDSubprogram(name: "function", scope: !1, file: !1, line: 7, type: !5, isLocal: false, isDefinition: true, scopeLine: 7, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i32)* @function, variables: !2)
!5 = !MDSubroutineType(types: !6)
!6 = !{!7, !7, !7}
!7 = !MDBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!8 = !{i32 2, !"Dwarf Version", i32 2}
!9 = !{i32 2, !"Debug Info Version", i32 3}
!10 = !{i32 1, !"PIC Level", i32 2}
!11 = !{!"clang version 3.7.0 (trunk) (git@git.psu.edu:dbz5017/LLVM-Deps.git dfce73fe0831457cbc5c1a8f7788dfcbd809ad99)"}
!12 = !MDLocalVariable(tag: DW_TAG_arg_variable, name: "key", arg: 1, scope: !4, file: !1, line: 7, type: !7)
!13 = !MDExpression()
!14 = !MDLocation(line: 7, column: 18, scope: !4)
!15 = !MDLocalVariable(tag: DW_TAG_arg_variable, name: "key2", arg: 2, scope: !4, file: !1, line: 7, type: !7)
!16 = !MDLocation(line: 7, column: 27, scope: !4)
!17 = !MDLocalVariable(tag: DW_TAG_auto_variable, name: "u", scope: !4, file: !1, line: 8, type: !7)
!18 = !MDLocation(line: 8, column: 6, scope: !4)
!19 = !MDLocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !4, file: !1, line: 8, type: !7)
!20 = !MDLocation(line: 8, column: 9, scope: !4)
!21 = !MDLocation(line: 9, column: 8, scope: !4)
!22 = !MDLocation(line: 9, column: 2, scope: !4)
!23 = !MDLocation(line: 11, column: 6, scope: !4)
!24 = !MDLocation(line: 11, column: 4, scope: !4)
!25 = !MDLocation(line: 12, column: 6, scope: !4)
!26 = !MDLocation(line: 12, column: 4, scope: !4)
!27 = !MDLocation(line: 14, column: 9, scope: !28)
!28 = distinct !MDLexicalBlock(scope: !4, file: !1, line: 14, column: 2)
!29 = !MDLocation(line: 14, column: 7, scope: !28)
!30 = !MDLocation(line: 14, column: 14, scope: !31)
!31 = distinct !MDLexicalBlock(scope: !28, file: !1, line: 14, column: 2)
!32 = !MDLocation(line: 14, column: 18, scope: !31)
!33 = !MDLocation(line: 14, column: 16, scope: !31)
!34 = !MDLocation(line: 14, column: 2, scope: !28)
!35 = !MDLocation(line: 14, column: 23, scope: !31)
!36 = !MDLocation(line: 14, column: 2, scope: !31)
!37 = !MDLocation(line: 17, column: 9, scope: !4)
!38 = !MDLocation(line: 17, column: 2, scope: !4)
