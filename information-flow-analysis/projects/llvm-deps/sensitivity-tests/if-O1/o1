; ModuleID = 'main.c'
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.14.0"

; Function Attrs: nounwind ssp uwtable
define i32 @function(i32 %key, i32 %key2) #0 {
for.end:
  tail call void @llvm.dbg.value(metadata i32 %key, i64 0, metadata !9, metadata !17), !dbg !18
  tail call void @llvm.dbg.value(metadata i32 %key2, i64 0, metadata !10, metadata !17), !dbg !19
  %call = tail call i64 @time(i64* null) #3, !dbg !20
  %conv = trunc i64 %call to i32, !dbg !20
  tail call void @srand(i32 %conv) #3, !dbg !21
  tail call void @llvm.dbg.value(metadata i32 %key, i64 0, metadata !11, metadata !17), !dbg !22
  tail call void @llvm.dbg.value(metadata i32 %key2, i64 0, metadata !12, metadata !17), !dbg !23
  tail call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !11, metadata !17), !dbg !22
  %0 = icmp sgt i32 %key2, 1
  %smax = select i1 %0, i32 %key2, i32 1
  ret i32 %smax, !dbg !24
}

declare void @srand(i32) #1

declare i64 @time(i64*) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #2

attributes #0 = { nounwind ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="core2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!13, !14, !15}
!llvm.ident = !{!16}

!0 = !MDCompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (trunk) (git@git.psu.edu:dbz5017/LLVM-Deps.git dfce73fe0831457cbc5c1a8f7788dfcbd809ad99)", isOptimized: true, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !2, subprograms: !3, globals: !2, imports: !2)
!1 = !MDFile(filename: "main.c", directory: "/Users/ernestdefoy/Code/Research-2019/LLVM-Deps/projects/llvm-deps/sensitivity-tests/if-O1")
!2 = !{}
!3 = !{!4}
!4 = !MDSubprogram(name: "function", scope: !1, file: !1, line: 7, type: !5, isLocal: false, isDefinition: true, scopeLine: 7, flags: DIFlagPrototyped, isOptimized: true, function: i32 (i32, i32)* @function, variables: !8)
!5 = !MDSubroutineType(types: !6)
!6 = !{!7, !7, !7}
!7 = !MDBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12}
!9 = !MDLocalVariable(tag: DW_TAG_arg_variable, name: "key", arg: 1, scope: !4, file: !1, line: 7, type: !7)
!10 = !MDLocalVariable(tag: DW_TAG_arg_variable, name: "key2", arg: 2, scope: !4, file: !1, line: 7, type: !7)
!11 = !MDLocalVariable(tag: DW_TAG_auto_variable, name: "u", scope: !4, file: !1, line: 8, type: !7)
!12 = !MDLocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !4, file: !1, line: 8, type: !7)
!13 = !{i32 2, !"Dwarf Version", i32 2}
!14 = !{i32 2, !"Debug Info Version", i32 3}
!15 = !{i32 1, !"PIC Level", i32 2}
!16 = !{!"clang version 3.7.0 (trunk) (git@git.psu.edu:dbz5017/LLVM-Deps.git dfce73fe0831457cbc5c1a8f7788dfcbd809ad99)"}
!17 = !MDExpression()
!18 = !MDLocation(line: 7, column: 18, scope: !4)
!19 = !MDLocation(line: 7, column: 27, scope: !4)
!20 = !MDLocation(line: 9, column: 8, scope: !4)
!21 = !MDLocation(line: 9, column: 2, scope: !4)
!22 = !MDLocation(line: 8, column: 6, scope: !4)
!23 = !MDLocation(line: 8, column: 9, scope: !4)
!24 = !MDLocation(line: 17, column: 2, scope: !4)
